Terminals unused in grammar

    CONST_CHAR
    CHAR
    DOUBLE
    CONTINUE
    DO


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id func_begin LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier id func_begin LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id func_begin LPAREN RPAREN compound_statement

   11 func_begin: %empty

   12 parameter_list: parameter_list COMMA type_specifier id
   13               | parameter_list COMMA type_specifier
   14               | type_specifier id
   15               | type_specifier
   16               | type_specifier error

   17 compound_statement: LCURL dummy_token_begin statements RCURL
   18                   | LCURL dummy_token_begin RCURL

   19 dummy_token_begin: %empty

   20 var_declaration: type_specifier declaration_list SEMICOLON

   21 type_specifier: INT
   22               | FLOAT
   23               | VOID

   24 declaration_list: declaration_list COMMA id
   25                 | declaration_list COMMA id LTHIRD CONST_INT RTHIRD
   26                 | id
   27                 | id LTHIRD CONST_INT RTHIRD
   28                 | declaration_list error COMMA id

   29 statements: statement
   30           | statements statement

   31 statement: var_declaration
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN id RPAREN SEMICOLON
   39          | RETURN expression SEMICOLON
   40          | func_declaration
   41          | func_definition

   42 expression_statement: SEMICOLON
   43                     | expression SEMICOLON
   44                     | error SEMICOLON

   45 variable: id
   46         | id LTHIRD expression RTHIRD

   47 expression: logic_expression
   48           | variable ASSIGNOP logic_expression

   49 logic_expression: rel_expression
   50                 | rel_expression LOGICOP rel_expression

   51 rel_expression: simple_expression
   52               | simple_expression RELOP simple_expression

   53 simple_expression: term
   54                  | simple_expression ADDOP term

   55 term: unary_expression
   56     | term MULOP unary_expression

   57 unary_expression: ADDOP unary_expression
   58                 | NOT unary_expression
   59                 | factor

   60 factor: variable
   61       | id LPAREN argument_list RPAREN
   62       | LPAREN expression RPAREN
   63       | CONST_INT
   64       | CONST_FLOAT
   65       | variable INCOP
   66       | variable DECOP

   67 argument_list: arguments
   68              | %empty

   69 arguments: arguments COMMA logic_expression
   70          | logic_expression

   71 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 16 28 44
    CONST_INT <si> (258) 25 27 63
    CONST_FLOAT <si> (259) 64
    CONST_CHAR <si> (260)
    ID <si> (261) 71
    INT <si> (262) 21
    FLOAT <si> (263) 22
    VOID <si> (264) 23
    CHAR <si> (265)
    DOUBLE <si> (266)
    IF <si> (267) 35 36
    ELSE <si> (268) 36
    FOR <si> (269) 34
    WHILE <si> (270) 37
    RETURN <si> (271) 39
    PRINTLN <si> (272) 38
    CONTINUE <si> (273)
    DO <si> (274)
    ASSIGNOP <si> (275) 48
    NOT <si> (276) 58
    INCOP <si> (277) 65
    DECOP <si> (278) 66
    LOGICOP <si> (279) 50
    RELOP <si> (280) 52
    ADDOP <si> (281) 54 57
    MULOP <si> (282) 56
    LPAREN <si> (283) 7 8 9 10 34 35 36 37 38 61 62
    RPAREN <si> (284) 7 8 9 10 34 35 36 37 38 61 62
    LCURL <si> (285) 17 18
    RCURL <si> (286) 17 18
    LTHIRD <si> (287) 25 27 46
    RTHIRD <si> (288) 25 27 46
    COMMA <si> (289) 12 13 24 25 28 69
    SEMICOLON <si> (290) 7 8 20 38 39 42 43 44
    LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    start <si> (38)
        on left: 1
        on right: 0
    program <si> (39)
        on left: 2 3
        on right: 1 2
    unit <si> (40)
        on left: 4 5 6
        on right: 2 3
    func_declaration <si> (41)
        on left: 7 8
        on right: 5 40
    func_definition <si> (42)
        on left: 9 10
        on right: 6 41
    func_begin <si> (43)
        on left: 11
        on right: 7 8 9 10
    parameter_list <si> (44)
        on left: 12 13 14 15 16
        on right: 7 9 12 13
    compound_statement <si> (45)
        on left: 17 18
        on right: 9 10 33
    dummy_token_begin <si> (46)
        on left: 19
        on right: 17 18
    var_declaration <si> (47)
        on left: 20
        on right: 4 31
    type_specifier <si> (48)
        on left: 21 22 23
        on right: 7 8 9 10 12 13 14 15 16 20
    declaration_list <si> (49)
        on left: 24 25 26 27 28
        on right: 20 24 25 28
    statements <si> (50)
        on left: 29 30
        on right: 17 30
    statement <si> (51)
        on left: 31 32 33 34 35 36 37 38 39 40 41
        on right: 29 30 34 35 36 37
    expression_statement <si> (52)
        on left: 42 43 44
        on right: 32 34
    variable <si> (53)
        on left: 45 46
        on right: 48 60 65 66
    expression <si> (54)
        on left: 47 48
        on right: 34 35 36 37 39 43 46 62
    logic_expression <si> (55)
        on left: 49 50
        on right: 47 48 69 70
    rel_expression <si> (56)
        on left: 51 52
        on right: 49 50
    simple_expression <si> (57)
        on left: 53 54
        on right: 51 52 54
    term <si> (58)
        on left: 55 56
        on right: 53 54 56
    unary_expression <si> (59)
        on left: 57 58 59
        on right: 55 56 57 58
    factor <si> (60)
        on left: 60 61 62 63 64 65 66
        on right: 59
    argument_list <si> (61)
        on left: 67 68
        on right: 61
    arguments <si> (62)
        on left: 69 70
        on right: 67 69
    id <si> (63)
        on left: 71
        on right: 7 8 9 10 12 14 24 25 26 27 28 38 45 46 61


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


State 2

   22 type_specifier: FLOAT .

    $default  reduce using rule 22 (type_specifier)


State 3

   23 type_specifier: VOID .

    $default  reduce using rule 23 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . id func_begin LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . id func_begin LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . id func_begin LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . id func_begin LPAREN RPAREN compound_statement
   20 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14
    id                go to state 15


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

   71 id: ID .

    $default  reduce using rule 71 (id)


State 14

   20 var_declaration: type_specifier declaration_list . SEMICOLON
   24 declaration_list: declaration_list . COMMA id
   25                 | declaration_list . COMMA id LTHIRD CONST_INT RTHIRD
   28                 | declaration_list . error COMMA id

    error      shift, and go to state 16
    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

    7 func_declaration: type_specifier id . func_begin LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id . func_begin LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier id . func_begin LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id . func_begin LPAREN RPAREN compound_statement
   26 declaration_list: id .
   27                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    LPAREN    reduce using rule 11 (func_begin)
    $default  reduce using rule 26 (declaration_list)

    func_begin  go to state 20


State 16

   28 declaration_list: declaration_list error . COMMA id

    COMMA  shift, and go to state 21


State 17

   24 declaration_list: declaration_list COMMA . id
   25                 | declaration_list COMMA . id LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 13

    id  go to state 22


State 18

   20 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 20 (var_declaration)


State 19

   27 declaration_list: id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


State 20

    7 func_declaration: type_specifier id func_begin . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id func_begin . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier id func_begin . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id func_begin . LPAREN RPAREN compound_statement

    LPAREN  shift, and go to state 24


State 21

   28 declaration_list: declaration_list error COMMA . id

    ID  shift, and go to state 13

    id  go to state 25


State 22

   24 declaration_list: declaration_list COMMA id .
   25                 | declaration_list COMMA id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 26

    $default  reduce using rule 24 (declaration_list)


State 23

   27 declaration_list: id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 27


State 24

    7 func_declaration: type_specifier id func_begin LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier id func_begin LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier id func_begin LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier id func_begin LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 28

    parameter_list  go to state 29
    type_specifier  go to state 30


State 25

   28 declaration_list: declaration_list error COMMA id .

    $default  reduce using rule 28 (declaration_list)


State 26

   25 declaration_list: declaration_list COMMA id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 31


State 27

   27 declaration_list: id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 28

    8 func_declaration: type_specifier id func_begin LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier id func_begin LPAREN RPAREN . compound_statement

    LCURL      shift, and go to state 32
    SEMICOLON  shift, and go to state 33

    compound_statement  go to state 34


State 29

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier id func_begin LPAREN parameter_list . RPAREN compound_statement
   12 parameter_list: parameter_list . COMMA type_specifier id
   13               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 35
    COMMA   shift, and go to state 36


State 30

   14 parameter_list: type_specifier . id
   15               | type_specifier .
   16               | type_specifier . error

    error  shift, and go to state 37
    ID     shift, and go to state 13

    RPAREN  reduce using rule 15 (parameter_list)
    COMMA   reduce using rule 15 (parameter_list)

    id  go to state 38


State 31

   25 declaration_list: declaration_list COMMA id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 39


State 32

   17 compound_statement: LCURL . dummy_token_begin statements RCURL
   18                   | LCURL . dummy_token_begin RCURL

    $default  reduce using rule 19 (dummy_token_begin)

    dummy_token_begin  go to state 40


State 33

    8 func_declaration: type_specifier id func_begin LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 34

   10 func_definition: type_specifier id func_begin LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 35

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier id func_begin LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 32
    SEMICOLON  shift, and go to state 41

    compound_statement  go to state 42


State 36

   12 parameter_list: parameter_list COMMA . type_specifier id
   13               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 43


State 37

   16 parameter_list: type_specifier error .

    $default  reduce using rule 16 (parameter_list)


State 38

   14 parameter_list: type_specifier id .

    $default  reduce using rule 14 (parameter_list)


State 39

   25 declaration_list: declaration_list COMMA id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 40

   17 compound_statement: LCURL dummy_token_begin . statements RCURL
   18                   | LCURL dummy_token_begin . RCURL

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    RETURN       shift, and go to state 50
    PRINTLN      shift, and go to state 51
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    RCURL        shift, and go to state 55
    SEMICOLON    shift, and go to state 56

    func_declaration      go to state 57
    func_definition       go to state 58
    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 10
    statements            go to state 61
    statement             go to state 62
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 41

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 42

    9 func_definition: type_specifier id func_begin LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 43

   12 parameter_list: parameter_list COMMA type_specifier . id
   13               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 13 (parameter_list)

    id  go to state 73


State 44

   44 expression_statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 45

   63 factor: CONST_INT .

    $default  reduce using rule 63 (factor)


State 46

   64 factor: CONST_FLOAT .

    $default  reduce using rule 64 (factor)


State 47

   35 statement: IF . LPAREN expression RPAREN statement
   36          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 75


State 48

   34 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 76


State 49

   37 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 77


State 50

   39 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 64
    expression         go to state 78
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 51

   38 statement: PRINTLN . LPAREN id RPAREN SEMICOLON

    LPAREN  shift, and go to state 79


State 52

   58 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 80
    unary_expression  go to state 81
    factor            go to state 71
    id                go to state 72


State 53

   57 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 80
    unary_expression  go to state 82
    factor            go to state 71
    id                go to state 72


State 54

   62 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 64
    expression         go to state 83
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 55

   18 compound_statement: LCURL dummy_token_begin RCURL .

    $default  reduce using rule 18 (compound_statement)


State 56

   42 expression_statement: SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


State 57

   40 statement: func_declaration .

    $default  reduce using rule 40 (statement)


State 58

   41 statement: func_definition .

    $default  reduce using rule 41 (statement)


State 59

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


State 60

   31 statement: var_declaration .

    $default  reduce using rule 31 (statement)


State 61

   17 compound_statement: LCURL dummy_token_begin statements . RCURL
   30 statements: statements . statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    RETURN       shift, and go to state 50
    PRINTLN      shift, and go to state 51
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    RCURL        shift, and go to state 84
    SEMICOLON    shift, and go to state 56

    func_declaration      go to state 57
    func_definition       go to state 58
    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 10
    statement             go to state 85
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 62

   29 statements: statement .

    $default  reduce using rule 29 (statements)


State 63

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 64

   48 expression: variable . ASSIGNOP logic_expression
   60 factor: variable .
   65       | variable . INCOP
   66       | variable . DECOP

    ASSIGNOP  shift, and go to state 86
    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88

    $default  reduce using rule 60 (factor)


State 65

   43 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 66

   47 expression: logic_expression .

    $default  reduce using rule 47 (expression)


State 67

   49 logic_expression: rel_expression .
   50                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 90

    $default  reduce using rule 49 (logic_expression)


State 68

   51 rel_expression: simple_expression .
   52               | simple_expression . RELOP simple_expression
   54 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 91
    ADDOP  shift, and go to state 92

    $default  reduce using rule 51 (rel_expression)


State 69

   53 simple_expression: term .
   56 term: term . MULOP unary_expression

    MULOP  shift, and go to state 93

    $default  reduce using rule 53 (simple_expression)


State 70

   55 term: unary_expression .

    $default  reduce using rule 55 (term)


State 71

   59 unary_expression: factor .

    $default  reduce using rule 59 (unary_expression)


State 72

   45 variable: id .
   46         | id . LTHIRD expression RTHIRD
   61 factor: id . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 94
    LTHIRD  shift, and go to state 95

    $default  reduce using rule 45 (variable)


State 73

   12 parameter_list: parameter_list COMMA type_specifier id .

    $default  reduce using rule 12 (parameter_list)


State 74

   44 expression_statement: error SEMICOLON .

    $default  reduce using rule 44 (expression_statement)


State 75

   35 statement: IF LPAREN . expression RPAREN statement
   36          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 64
    expression         go to state 96
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 76

   34 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    SEMICOLON    shift, and go to state 56

    expression_statement  go to state 97
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 77

   37 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 64
    expression         go to state 98
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 78

   39 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 79

   38 statement: PRINTLN LPAREN . id RPAREN SEMICOLON

    ID  shift, and go to state 13

    id  go to state 100


State 80

   60 factor: variable .
   65       | variable . INCOP
   66       | variable . DECOP

    INCOP  shift, and go to state 87
    DECOP  shift, and go to state 88

    $default  reduce using rule 60 (factor)


State 81

   58 unary_expression: NOT unary_expression .

    $default  reduce using rule 58 (unary_expression)


State 82

   57 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 57 (unary_expression)


State 83

   62 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 101


State 84

   17 compound_statement: LCURL dummy_token_begin statements RCURL .

    $default  reduce using rule 17 (compound_statement)


State 85

   30 statements: statements statement .

    $default  reduce using rule 30 (statements)


State 86

   48 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 80
    logic_expression   go to state 102
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 87

   65 factor: variable INCOP .

    $default  reduce using rule 65 (factor)


State 88

   66 factor: variable DECOP .

    $default  reduce using rule 66 (factor)


State 89

   43 expression_statement: expression SEMICOLON .

    $default  reduce using rule 43 (expression_statement)


State 90

   50 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 80
    rel_expression     go to state 103
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 91

   52 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 80
    simple_expression  go to state 104
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 92

   54 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 80
    term              go to state 105
    unary_expression  go to state 70
    factor            go to state 71
    id                go to state 72


State 93

   56 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 80
    unary_expression  go to state 106
    factor            go to state 71
    id                go to state 72


State 94

   61 factor: id LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    $default  reduce using rule 68 (argument_list)

    variable           go to state 80
    logic_expression   go to state 107
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    argument_list      go to state 108
    arguments          go to state 109
    id                 go to state 72


State 95

   46 variable: id LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 64
    expression         go to state 110
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 96

   35 statement: IF LPAREN expression . RPAREN statement
   36          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 111


State 97

   34 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    SEMICOLON    shift, and go to state 56

    expression_statement  go to state 112
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 98

   37 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 113


State 99

   39 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 39 (statement)


State 100

   38 statement: PRINTLN LPAREN id . RPAREN SEMICOLON

    RPAREN  shift, and go to state 114


State 101

   62 factor: LPAREN expression RPAREN .

    $default  reduce using rule 62 (factor)


State 102

   48 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 48 (expression)


State 103

   50 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 50 (logic_expression)


State 104

   52 rel_expression: simple_expression RELOP simple_expression .
   54 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 92

    $default  reduce using rule 52 (rel_expression)


State 105

   54 simple_expression: simple_expression ADDOP term .
   56 term: term . MULOP unary_expression

    MULOP  shift, and go to state 93

    $default  reduce using rule 54 (simple_expression)


State 106

   56 term: term MULOP unary_expression .

    $default  reduce using rule 56 (term)


State 107

   70 arguments: logic_expression .

    $default  reduce using rule 70 (arguments)


State 108

   61 factor: id LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 115


State 109

   67 argument_list: arguments .
   69 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 116

    $default  reduce using rule 67 (argument_list)


State 110

   46 variable: id LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 117


State 111

   35 statement: IF LPAREN expression RPAREN . statement
   36          | IF LPAREN expression RPAREN . statement ELSE statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    RETURN       shift, and go to state 50
    PRINTLN      shift, and go to state 51
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 56

    func_declaration      go to state 57
    func_definition       go to state 58
    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 10
    statement             go to state 118
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 112

   34 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 64
    expression         go to state 119
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 113

   37 statement: WHILE LPAREN expression RPAREN . statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    RETURN       shift, and go to state 50
    PRINTLN      shift, and go to state 51
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 56

    func_declaration      go to state 57
    func_definition       go to state 58
    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 10
    statement             go to state 120
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 114

   38 statement: PRINTLN LPAREN id RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 115

   61 factor: id LPAREN argument_list RPAREN .

    $default  reduce using rule 61 (factor)


State 116

   69 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 80
    logic_expression   go to state 122
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    id                 go to state 72


State 117

   46 variable: id LTHIRD expression RTHIRD .

    $default  reduce using rule 46 (variable)


State 118

   35 statement: IF LPAREN expression RPAREN statement .
   36          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 123

    $default  reduce using rule 35 (statement)


State 119

   34 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 124


State 120

   37 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (statement)


State 121

   38 statement: PRINTLN LPAREN id RPAREN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 122

   69 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 69 (arguments)


State 123

   36 statement: IF LPAREN expression RPAREN statement ELSE . statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    RETURN       shift, and go to state 50
    PRINTLN      shift, and go to state 51
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 56

    func_declaration      go to state 57
    func_definition       go to state 58
    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 10
    statement             go to state 125
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 124

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    error        shift, and go to state 44
    CONST_INT    shift, and go to state 45
    CONST_FLOAT  shift, and go to state 46
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    RETURN       shift, and go to state 50
    PRINTLN      shift, and go to state 51
    NOT          shift, and go to state 52
    ADDOP        shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 56

    func_declaration      go to state 57
    func_definition       go to state 58
    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 10
    statement             go to state 126
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71
    id                    go to state 72


State 125

   36 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (statement)


State 126

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 34 (statement)
