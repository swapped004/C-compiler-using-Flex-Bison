Terminals unused in grammar

    CONST_CHAR
    CHAR
    DOUBLE
    CONTINUE
    DO


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id func_begin LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier id func_begin LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id func_begin LPAREN RPAREN compound_statement

   11 func_begin: %empty

   12 parameter_list: parameter_list COMMA type_specifier id
   13               | parameter_list COMMA type_specifier
   14               | type_specifier id
   15               | type_specifier
   16               | error

   17 compound_statement: LCURL dummy_token_begin statements RCURL
   18                   | LCURL dummy_token_begin RCURL

   19 dummy_token_begin: %empty

   20 var_declaration: type_specifier declaration_list SEMICOLON

   21 type_specifier: INT
   22               | FLOAT
   23               | VOID

   24 declaration_list: declaration_list COMMA id
   25                 | declaration_list COMMA id LTHIRD CONST_INT RTHIRD
   26                 | id
   27                 | id LTHIRD CONST_INT RTHIRD
   28                 | error

   29 statements: statement
   30           | statements statement

   31 statement: var_declaration
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN id RPAREN SEMICOLON
   39          | RETURN expression SEMICOLON

   40 expression_statement: SEMICOLON
   41                     | expression SEMICOLON

   42 variable: id
   43         | id LTHIRD expression RTHIRD

   44 expression: logic_expression
   45           | variable ASSIGNOP logic_expression
   46           | error

   47 logic_expression: rel_expression
   48                 | rel_expression LOGICOP rel_expression

   49 rel_expression: simple_expression
   50               | simple_expression RELOP simple_expression

   51 simple_expression: term
   52                  | simple_expression ADDOP term

   53 term: unary_expression
   54     | term MULOP unary_expression

   55 unary_expression: ADDOP unary_expression
   56                 | NOT unary_expression
   57                 | factor

   58 factor: variable
   59       | id LPAREN argument_list RPAREN
   60       | LPAREN expression RPAREN
   61       | CONST_INT
   62       | CONST_FLOAT
   63       | variable INCOP
   64       | variable DECOP

   65 argument_list: arguments
   66              | %empty

   67 arguments: arguments COMMA logic_expression
   68          | logic_expression

   69 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 16 28 46
    CONST_INT <si> (258) 25 27 61
    CONST_FLOAT <si> (259) 62
    CONST_CHAR <si> (260)
    ID <si> (261) 69
    INT <si> (262) 21
    FLOAT <si> (263) 22
    VOID <si> (264) 23
    CHAR <si> (265)
    DOUBLE <si> (266)
    IF <si> (267) 35 36
    ELSE <si> (268) 36
    FOR <si> (269) 34
    WHILE <si> (270) 37
    RETURN <si> (271) 39
    PRINTLN <si> (272) 38
    CONTINUE <si> (273)
    DO <si> (274)
    ASSIGNOP <si> (275) 45
    NOT <si> (276) 56
    INCOP <si> (277) 63
    DECOP <si> (278) 64
    LOGICOP <si> (279) 48
    RELOP <si> (280) 50
    ADDOP <si> (281) 52 55
    MULOP <si> (282) 54
    LPAREN <si> (283) 7 8 9 10 34 35 36 37 38 59 60
    RPAREN <si> (284) 7 8 9 10 34 35 36 37 38 59 60
    LCURL <si> (285) 17 18
    RCURL <si> (286) 17 18
    LTHIRD <si> (287) 25 27 43
    RTHIRD <si> (288) 25 27 43
    COMMA <si> (289) 12 13 24 25 67
    SEMICOLON <si> (290) 7 8 20 38 39 40 41
    LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    start <si> (38)
        on left: 1
        on right: 0
    program <si> (39)
        on left: 2 3
        on right: 1 2
    unit <si> (40)
        on left: 4 5 6
        on right: 2 3
    func_declaration <si> (41)
        on left: 7 8
        on right: 5
    func_definition <si> (42)
        on left: 9 10
        on right: 6
    func_begin <si> (43)
        on left: 11
        on right: 7 8 9 10
    parameter_list <si> (44)
        on left: 12 13 14 15 16
        on right: 7 9 12 13
    compound_statement <si> (45)
        on left: 17 18
        on right: 9 10 33
    dummy_token_begin <si> (46)
        on left: 19
        on right: 17 18
    var_declaration <si> (47)
        on left: 20
        on right: 4 31
    type_specifier <si> (48)
        on left: 21 22 23
        on right: 7 8 9 10 12 13 14 15 20
    declaration_list <si> (49)
        on left: 24 25 26 27 28
        on right: 20 24 25
    statements <si> (50)
        on left: 29 30
        on right: 17 30
    statement <si> (51)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 29 30 34 35 36 37
    expression_statement <si> (52)
        on left: 40 41
        on right: 32 34
    variable <si> (53)
        on left: 42 43
        on right: 45 58 63 64
    expression <si> (54)
        on left: 44 45 46
        on right: 34 35 36 37 39 41 43 60
    logic_expression <si> (55)
        on left: 47 48
        on right: 44 45 67 68
    rel_expression <si> (56)
        on left: 49 50
        on right: 47 48
    simple_expression <si> (57)
        on left: 51 52
        on right: 49 50 52
    term <si> (58)
        on left: 53 54
        on right: 51 52 54
    unary_expression <si> (59)
        on left: 55 56 57
        on right: 53 54 55 56
    factor <si> (60)
        on left: 58 59 60 61 62 63 64
        on right: 57
    argument_list <si> (61)
        on left: 65 66
        on right: 59
    arguments <si> (62)
        on left: 67 68
        on right: 65 67
    id <si> (63)
        on left: 69
        on right: 7 8 9 10 12 14 24 25 26 27 38 42 43 59


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


State 2

   22 type_specifier: FLOAT .

    $default  reduce using rule 22 (type_specifier)


State 3

   23 type_specifier: VOID .

    $default  reduce using rule 23 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . id func_begin LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . id func_begin LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . id func_begin LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . id func_begin LPAREN RPAREN compound_statement
   20 var_declaration: type_specifier . declaration_list SEMICOLON

    error  shift, and go to state 13
    ID     shift, and go to state 14

    declaration_list  go to state 15
    id                go to state 16


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

   28 declaration_list: error .

    $default  reduce using rule 28 (declaration_list)


State 14

   69 id: ID .

    $default  reduce using rule 69 (id)


State 15

   20 var_declaration: type_specifier declaration_list . SEMICOLON
   24 declaration_list: declaration_list . COMMA id
   25                 | declaration_list . COMMA id LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 16

    7 func_declaration: type_specifier id . func_begin LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id . func_begin LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier id . func_begin LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id . func_begin LPAREN RPAREN compound_statement
   26 declaration_list: id .
   27                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    LPAREN    reduce using rule 11 (func_begin)
    $default  reduce using rule 26 (declaration_list)

    func_begin  go to state 20


State 17

   24 declaration_list: declaration_list COMMA . id
   25                 | declaration_list COMMA . id LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 14

    id  go to state 21


State 18

   20 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 20 (var_declaration)


State 19

   27 declaration_list: id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 20

    7 func_declaration: type_specifier id func_begin . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id func_begin . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier id func_begin . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id func_begin . LPAREN RPAREN compound_statement

    LPAREN  shift, and go to state 23


State 21

   24 declaration_list: declaration_list COMMA id .
   25                 | declaration_list COMMA id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 24

    $default  reduce using rule 24 (declaration_list)


State 22

   27 declaration_list: id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 25


State 23

    7 func_declaration: type_specifier id func_begin LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier id func_begin LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier id func_begin LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier id func_begin LPAREN . RPAREN compound_statement

    error   shift, and go to state 26
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 27

    parameter_list  go to state 28
    type_specifier  go to state 29


State 24

   25 declaration_list: declaration_list COMMA id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 30


State 25

   27 declaration_list: id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 26

   16 parameter_list: error .

    $default  reduce using rule 16 (parameter_list)


State 27

    8 func_declaration: type_specifier id func_begin LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier id func_begin LPAREN RPAREN . compound_statement

    LCURL      shift, and go to state 31
    SEMICOLON  shift, and go to state 32

    compound_statement  go to state 33


State 28

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier id func_begin LPAREN parameter_list . RPAREN compound_statement
   12 parameter_list: parameter_list . COMMA type_specifier id
   13               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 34
    COMMA   shift, and go to state 35


State 29

   14 parameter_list: type_specifier . id
   15               | type_specifier .

    ID  shift, and go to state 14

    $default  reduce using rule 15 (parameter_list)

    id  go to state 36


State 30

   25 declaration_list: declaration_list COMMA id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 37


State 31

   17 compound_statement: LCURL . dummy_token_begin statements RCURL
   18                   | LCURL . dummy_token_begin RCURL

    $default  reduce using rule 19 (dummy_token_begin)

    dummy_token_begin  go to state 38


State 32

    8 func_declaration: type_specifier id func_begin LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 33

   10 func_definition: type_specifier id func_begin LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 34

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier id func_begin LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 31
    SEMICOLON  shift, and go to state 39

    compound_statement  go to state 40


State 35

   12 parameter_list: parameter_list COMMA . type_specifier id
   13               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 41


State 36

   14 parameter_list: type_specifier id .

    $default  reduce using rule 14 (parameter_list)


State 37

   25 declaration_list: declaration_list COMMA id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 38

   17 compound_statement: LCURL dummy_token_begin . statements RCURL
   18                   | LCURL dummy_token_begin . RCURL

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    RETURN       shift, and go to state 48
    PRINTLN      shift, and go to state 49
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 31
    RCURL        shift, and go to state 53
    SEMICOLON    shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statements            go to state 58
    statement             go to state 59
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 39

    7 func_declaration: type_specifier id func_begin LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 40

    9 func_definition: type_specifier id func_begin LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 41

   12 parameter_list: parameter_list COMMA type_specifier . id
   13               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 14

    $default  reduce using rule 13 (parameter_list)

    id  go to state 70


State 42

   46 expression: error .

    $default  reduce using rule 46 (expression)


State 43

   61 factor: CONST_INT .

    $default  reduce using rule 61 (factor)


State 44

   62 factor: CONST_FLOAT .

    $default  reduce using rule 62 (factor)


State 45

   35 statement: IF . LPAREN expression RPAREN statement
   36          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 71


State 46

   34 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 72


State 47

   37 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 73


State 48

   39 statement: RETURN . expression SEMICOLON

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 61
    expression         go to state 74
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 49

   38 statement: PRINTLN . LPAREN id RPAREN SEMICOLON

    LPAREN  shift, and go to state 75


State 50

   56 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable          go to state 76
    unary_expression  go to state 77
    factor            go to state 68
    id                go to state 69


State 51

   55 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable          go to state 76
    unary_expression  go to state 78
    factor            go to state 68
    id                go to state 69


State 52

   60 factor: LPAREN . expression RPAREN

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 61
    expression         go to state 79
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 53

   18 compound_statement: LCURL dummy_token_begin RCURL .

    $default  reduce using rule 18 (compound_statement)


State 54

   40 expression_statement: SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 55

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


State 56

   31 statement: var_declaration .

    $default  reduce using rule 31 (statement)


State 57

   20 var_declaration: type_specifier . declaration_list SEMICOLON

    error  shift, and go to state 13
    ID     shift, and go to state 14

    declaration_list  go to state 15
    id                go to state 80


State 58

   17 compound_statement: LCURL dummy_token_begin statements . RCURL
   30 statements: statements . statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    RETURN       shift, and go to state 48
    PRINTLN      shift, and go to state 49
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 31
    RCURL        shift, and go to state 81
    SEMICOLON    shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 82
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 59

   29 statements: statement .

    $default  reduce using rule 29 (statements)


State 60

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 61

   45 expression: variable . ASSIGNOP logic_expression
   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    ASSIGNOP  shift, and go to state 83
    INCOP     shift, and go to state 84
    DECOP     shift, and go to state 85

    $default  reduce using rule 58 (factor)


State 62

   41 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 63

   44 expression: logic_expression .

    $default  reduce using rule 44 (expression)


State 64

   47 logic_expression: rel_expression .
   48                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 87

    $default  reduce using rule 47 (logic_expression)


State 65

   49 rel_expression: simple_expression .
   50               | simple_expression . RELOP simple_expression
   52 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 88
    ADDOP  shift, and go to state 89

    $default  reduce using rule 49 (rel_expression)


State 66

   51 simple_expression: term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 51 (simple_expression)


State 67

   53 term: unary_expression .

    $default  reduce using rule 53 (term)


State 68

   57 unary_expression: factor .

    $default  reduce using rule 57 (unary_expression)


State 69

   42 variable: id .
   43         | id . LTHIRD expression RTHIRD
   59 factor: id . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 91
    LTHIRD  shift, and go to state 92

    $default  reduce using rule 42 (variable)


State 70

   12 parameter_list: parameter_list COMMA type_specifier id .

    $default  reduce using rule 12 (parameter_list)


State 71

   35 statement: IF LPAREN . expression RPAREN statement
   36          | IF LPAREN . expression RPAREN statement ELSE statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 61
    expression         go to state 93
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 72

   34 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    SEMICOLON    shift, and go to state 54

    expression_statement  go to state 94
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 73

   37 statement: WHILE LPAREN . expression RPAREN statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 61
    expression         go to state 95
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 74

   39 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 75

   38 statement: PRINTLN LPAREN . id RPAREN SEMICOLON

    ID  shift, and go to state 14

    id  go to state 97


State 76

   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    INCOP  shift, and go to state 84
    DECOP  shift, and go to state 85

    $default  reduce using rule 58 (factor)


State 77

   56 unary_expression: NOT unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 78

   55 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 79

   60 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 98


State 80

   26 declaration_list: id .
   27                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    $default  reduce using rule 26 (declaration_list)


State 81

   17 compound_statement: LCURL dummy_token_begin statements RCURL .

    $default  reduce using rule 17 (compound_statement)


State 82

   30 statements: statements statement .

    $default  reduce using rule 30 (statements)


State 83

   45 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 76
    logic_expression   go to state 99
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 84

   63 factor: variable INCOP .

    $default  reduce using rule 63 (factor)


State 85

   64 factor: variable DECOP .

    $default  reduce using rule 64 (factor)


State 86

   41 expression_statement: expression SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 87

   48 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 76
    rel_expression     go to state 100
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 88

   50 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 76
    simple_expression  go to state 101
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 89

   52 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable          go to state 76
    term              go to state 102
    unary_expression  go to state 67
    factor            go to state 68
    id                go to state 69


State 90

   54 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable          go to state 76
    unary_expression  go to state 103
    factor            go to state 68
    id                go to state 69


State 91

   59 factor: id LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    $default  reduce using rule 66 (argument_list)

    variable           go to state 76
    logic_expression   go to state 104
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    argument_list      go to state 105
    arguments          go to state 106
    id                 go to state 69


State 92

   43 variable: id LTHIRD . expression RTHIRD

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 61
    expression         go to state 107
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 93

   35 statement: IF LPAREN expression . RPAREN statement
   36          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 108


State 94

   34 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    SEMICOLON    shift, and go to state 54

    expression_statement  go to state 109
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 95

   37 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 110


State 96

   39 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 39 (statement)


State 97

   38 statement: PRINTLN LPAREN id . RPAREN SEMICOLON

    RPAREN  shift, and go to state 111


State 98

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


State 99

   45 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 45 (expression)


State 100

   48 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 48 (logic_expression)


State 101

   50 rel_expression: simple_expression RELOP simple_expression .
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 89

    $default  reduce using rule 50 (rel_expression)


State 102

   52 simple_expression: simple_expression ADDOP term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 52 (simple_expression)


State 103

   54 term: term MULOP unary_expression .

    $default  reduce using rule 54 (term)


State 104

   68 arguments: logic_expression .

    $default  reduce using rule 68 (arguments)


State 105

   59 factor: id LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 112


State 106

   65 argument_list: arguments .
   67 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 113

    $default  reduce using rule 65 (argument_list)


State 107

   43 variable: id LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 114


State 108

   35 statement: IF LPAREN expression RPAREN . statement
   36          | IF LPAREN expression RPAREN . statement ELSE statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    RETURN       shift, and go to state 48
    PRINTLN      shift, and go to state 49
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 31
    SEMICOLON    shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 115
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 109

   34 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 61
    expression         go to state 116
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 110

   37 statement: WHILE LPAREN expression RPAREN . statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    RETURN       shift, and go to state 48
    PRINTLN      shift, and go to state 49
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 31
    SEMICOLON    shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 117
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 111

   38 statement: PRINTLN LPAREN id RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 112

   59 factor: id LPAREN argument_list RPAREN .

    $default  reduce using rule 59 (factor)


State 113

   67 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52

    variable           go to state 76
    logic_expression   go to state 119
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    id                 go to state 69


State 114

   43 variable: id LTHIRD expression RTHIRD .

    $default  reduce using rule 43 (variable)


State 115

   35 statement: IF LPAREN expression RPAREN statement .
   36          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 120

    $default  reduce using rule 35 (statement)


State 116

   34 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 121


State 117

   37 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (statement)


State 118

   38 statement: PRINTLN LPAREN id RPAREN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 119

   67 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 67 (arguments)


State 120

   36 statement: IF LPAREN expression RPAREN statement ELSE . statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    RETURN       shift, and go to state 48
    PRINTLN      shift, and go to state 49
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 31
    SEMICOLON    shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 122
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 121

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ID           shift, and go to state 14
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    RETURN       shift, and go to state 48
    PRINTLN      shift, and go to state 49
    NOT          shift, and go to state 50
    ADDOP        shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 31
    SEMICOLON    shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 123
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68
    id                    go to state 69


State 122

   36 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (statement)


State 123

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 34 (statement)
