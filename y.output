Terminals unused in grammar

    CONST_CHAR
    CHAR
    DOUBLE
    CONTINUE
    DO


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier id LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier id LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id LPAREN RPAREN compound_statement

   11 parameter_list: parameter_list COMMA type_specifier id
   12               | parameter_list COMMA type_specifier
   13               | type_specifier id
   14               | type_specifier

   15 compound_statement: LCURL dummy_token_begin statements RCURL
   16                   | LCURL dummy_token_begin RCURL

   17 dummy_token_begin: %empty

   18 var_declaration: type_specifier declaration_list SEMICOLON

   19 type_specifier: INT
   20               | FLOAT
   21               | VOID

   22 declaration_list: declaration_list COMMA id
   23                 | declaration_list COMMA id LTHIRD CONST_INT RTHIRD
   24                 | id
   25                 | id LTHIRD CONST_INT RTHIRD

   26 statements: statement
   27           | statements statement

   28 statement: var_declaration
   29          | expression_statement
   30          | compound_statement
   31          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   32          | IF LPAREN expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement ELSE statement
   34          | WHILE LPAREN expression RPAREN statement
   35          | PRINTLN LPAREN id RPAREN SEMICOLON
   36          | RETURN expression SEMICOLON

   37 expression_statement: SEMICOLON
   38                     | expression SEMICOLON

   39 variable: id
   40         | id LTHIRD expression RTHIRD

   41 expression: logic_expression
   42           | variable ASSIGNOP logic_expression

   43 logic_expression: rel_expression
   44                 | rel_expression LOGICOP rel_expression

   45 rel_expression: simple_expression
   46               | simple_expression RELOP simple_expression

   47 simple_expression: term
   48                  | simple_expression ADDOP term

   49 term: unary_expression
   50     | term MULOP unary_expression

   51 unary_expression: ADDOP unary_expression
   52                 | NOT unary_expression
   53                 | factor

   54 factor: variable
   55       | id LPAREN argument_list RPAREN
   56       | LPAREN expression RPAREN
   57       | CONST_INT
   58       | CONST_FLOAT
   59       | variable INCOP
   60       | variable DECOP

   61 argument_list: arguments
   62              | %empty

   63 arguments: arguments COMMA logic_expression
   64          | logic_expression

   65 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CONST_INT <si> (258) 23 25 57
    CONST_FLOAT <si> (259) 58
    CONST_CHAR <si> (260)
    ID <si> (261) 65
    INT <si> (262) 19
    FLOAT <si> (263) 20
    VOID <si> (264) 21
    CHAR <si> (265)
    DOUBLE <si> (266)
    IF <si> (267) 32 33
    ELSE <si> (268) 33
    FOR <si> (269) 31
    WHILE <si> (270) 34
    RETURN <si> (271) 36
    PRINTLN <si> (272) 35
    CONTINUE <si> (273)
    DO <si> (274)
    ASSIGNOP <si> (275) 42
    NOT <si> (276) 52
    INCOP <si> (277) 59
    DECOP <si> (278) 60
    LOGICOP <si> (279) 44
    RELOP <si> (280) 46
    ADDOP <si> (281) 48 51
    MULOP <si> (282) 50
    LPAREN <si> (283) 7 8 9 10 31 32 33 34 35 55 56
    RPAREN <si> (284) 7 8 9 10 31 32 33 34 35 55 56
    LCURL <si> (285) 15 16
    RCURL <si> (286) 15 16
    LTHIRD <si> (287) 23 25 40
    RTHIRD <si> (288) 23 25 40
    COMMA <si> (289) 11 12 22 23 63
    SEMICOLON <si> (290) 7 8 18 35 36 37 38
    LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    start <si> (38)
        on left: 1
        on right: 0
    program <si> (39)
        on left: 2 3
        on right: 1 2
    unit <si> (40)
        on left: 4 5 6
        on right: 2 3
    func_declaration <si> (41)
        on left: 7 8
        on right: 5
    func_definition <si> (42)
        on left: 9 10
        on right: 6
    parameter_list <si> (43)
        on left: 11 12 13 14
        on right: 7 9 11 12
    compound_statement <si> (44)
        on left: 15 16
        on right: 9 10 30
    dummy_token_begin <si> (45)
        on left: 17
        on right: 15 16
    var_declaration <si> (46)
        on left: 18
        on right: 4 28
    type_specifier <si> (47)
        on left: 19 20 21
        on right: 7 8 9 10 11 12 13 14 18
    declaration_list <si> (48)
        on left: 22 23 24 25
        on right: 18 22 23
    statements <si> (49)
        on left: 26 27
        on right: 15 27
    statement <si> (50)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 26 27 31 32 33 34
    expression_statement <si> (51)
        on left: 37 38
        on right: 29 31
    variable <si> (52)
        on left: 39 40
        on right: 42 54 59 60
    expression <si> (53)
        on left: 41 42
        on right: 31 32 33 34 36 38 40 56
    logic_expression <si> (54)
        on left: 43 44
        on right: 41 42 63 64
    rel_expression <si> (55)
        on left: 45 46
        on right: 43 44
    simple_expression <si> (56)
        on left: 47 48
        on right: 45 46 48
    term <si> (57)
        on left: 49 50
        on right: 47 48 50
    unary_expression <si> (58)
        on left: 51 52 53
        on right: 49 50 51 52
    factor <si> (59)
        on left: 54 55 56 57 58 59 60
        on right: 53
    argument_list <si> (60)
        on left: 61 62
        on right: 55
    arguments <si> (61)
        on left: 63 64
        on right: 61 63
    id <si> (62)
        on left: 65
        on right: 7 8 9 10 11 13 22 23 24 25 35 39 40 55


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   19 type_specifier: INT .

    $default  reduce using rule 19 (type_specifier)


State 2

   20 type_specifier: FLOAT .

    $default  reduce using rule 20 (type_specifier)


State 3

   21 type_specifier: VOID .

    $default  reduce using rule 21 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . id LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . id LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . id LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . id LPAREN RPAREN compound_statement
   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14
    id                go to state 15


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

   65 id: ID .

    $default  reduce using rule 65 (id)


State 14

   18 var_declaration: type_specifier declaration_list . SEMICOLON
   22 declaration_list: declaration_list . COMMA id
   23                 | declaration_list . COMMA id LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


State 15

    7 func_declaration: type_specifier id . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier id . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id . LPAREN RPAREN compound_statement
   24 declaration_list: id .
   25                 | id . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 18
    LTHIRD  shift, and go to state 19

    $default  reduce using rule 24 (declaration_list)


State 16

   22 declaration_list: declaration_list COMMA . id
   23                 | declaration_list COMMA . id LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 13

    id  go to state 20


State 17

   18 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 18 (var_declaration)


State 18

    7 func_declaration: type_specifier id LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier id LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier id LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier id LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    type_specifier  go to state 23


State 19

   25 declaration_list: id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 24


State 20

   22 declaration_list: declaration_list COMMA id .
   23                 | declaration_list COMMA id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 25

    $default  reduce using rule 22 (declaration_list)


State 21

    8 func_declaration: type_specifier id LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier id LPAREN RPAREN . compound_statement

    LCURL      shift, and go to state 26
    SEMICOLON  shift, and go to state 27

    compound_statement  go to state 28


State 22

    7 func_declaration: type_specifier id LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier id LPAREN parameter_list . RPAREN compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier id
   12               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 29
    COMMA   shift, and go to state 30


State 23

   13 parameter_list: type_specifier . id
   14               | type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 14 (parameter_list)

    id  go to state 31


State 24

   25 declaration_list: id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 32


State 25

   23 declaration_list: declaration_list COMMA id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 33


State 26

   15 compound_statement: LCURL . dummy_token_begin statements RCURL
   16                   | LCURL . dummy_token_begin RCURL

    $default  reduce using rule 17 (dummy_token_begin)

    dummy_token_begin  go to state 34


State 27

    8 func_declaration: type_specifier id LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 28

   10 func_definition: type_specifier id LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 29

    7 func_declaration: type_specifier id LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier id LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 26
    SEMICOLON  shift, and go to state 35

    compound_statement  go to state 36


State 30

   11 parameter_list: parameter_list COMMA . type_specifier id
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 37


State 31

   13 parameter_list: type_specifier id .

    $default  reduce using rule 13 (parameter_list)


State 32

   25 declaration_list: id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 33

   23 declaration_list: declaration_list COMMA id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 38


State 34

   15 compound_statement: LCURL dummy_token_begin . statements RCURL
   16                   | LCURL dummy_token_begin . RCURL

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    RCURL        shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statements            go to state 54
    statement             go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 35

    7 func_declaration: type_specifier id LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 36

    9 func_definition: type_specifier id LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 37

   11 parameter_list: parameter_list COMMA type_specifier . id
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 12 (parameter_list)

    id  go to state 66


State 38

   23 declaration_list: declaration_list COMMA id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 23 (declaration_list)


State 39

   57 factor: CONST_INT .

    $default  reduce using rule 57 (factor)


State 40

   58 factor: CONST_FLOAT .

    $default  reduce using rule 58 (factor)


State 41

   32 statement: IF . LPAREN expression RPAREN statement
   33          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 67


State 42

   31 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 68


State 43

   34 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 69


State 44

   36 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 70
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 45

   35 statement: PRINTLN . LPAREN id RPAREN SEMICOLON

    LPAREN  shift, and go to state 71


State 46

   52 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    unary_expression  go to state 73
    factor            go to state 64
    id                go to state 65


State 47

   51 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    unary_expression  go to state 74
    factor            go to state 64
    id                go to state 65


State 48

   56 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 75
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 49

   16 compound_statement: LCURL dummy_token_begin RCURL .

    $default  reduce using rule 16 (compound_statement)


State 50

   37 expression_statement: SEMICOLON .

    $default  reduce using rule 37 (expression_statement)


State 51

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


State 52

   28 statement: var_declaration .

    $default  reduce using rule 28 (statement)


State 53

   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14
    id                go to state 76


State 54

   15 compound_statement: LCURL dummy_token_begin statements . RCURL
   27 statements: statements . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    RCURL        shift, and go to state 77
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 78
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 55

   26 statements: statement .

    $default  reduce using rule 26 (statements)


State 56

   29 statement: expression_statement .

    $default  reduce using rule 29 (statement)


State 57

   42 expression: variable . ASSIGNOP logic_expression
   54 factor: variable .
   59       | variable . INCOP
   60       | variable . DECOP

    ASSIGNOP  shift, and go to state 79
    INCOP     shift, and go to state 80
    DECOP     shift, and go to state 81

    $default  reduce using rule 54 (factor)


State 58

   38 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 59

   41 expression: logic_expression .

    $default  reduce using rule 41 (expression)


State 60

   43 logic_expression: rel_expression .
   44                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 83

    $default  reduce using rule 43 (logic_expression)


State 61

   45 rel_expression: simple_expression .
   46               | simple_expression . RELOP simple_expression
   48 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 84
    ADDOP  shift, and go to state 85

    $default  reduce using rule 45 (rel_expression)


State 62

   47 simple_expression: term .
   50 term: term . MULOP unary_expression

    MULOP  shift, and go to state 86

    $default  reduce using rule 47 (simple_expression)


State 63

   49 term: unary_expression .

    $default  reduce using rule 49 (term)


State 64

   53 unary_expression: factor .

    $default  reduce using rule 53 (unary_expression)


State 65

   39 variable: id .
   40         | id . LTHIRD expression RTHIRD
   55 factor: id . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 87
    LTHIRD  shift, and go to state 88

    $default  reduce using rule 39 (variable)


State 66

   11 parameter_list: parameter_list COMMA type_specifier id .

    $default  reduce using rule 11 (parameter_list)


State 67

   32 statement: IF LPAREN . expression RPAREN statement
   33          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 89
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 68

   31 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 50

    expression_statement  go to state 90
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 69

   34 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 91
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 70

   36 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 71

   35 statement: PRINTLN LPAREN . id RPAREN SEMICOLON

    ID  shift, and go to state 13

    id  go to state 93


State 72

   54 factor: variable .
   59       | variable . INCOP
   60       | variable . DECOP

    INCOP  shift, and go to state 80
    DECOP  shift, and go to state 81

    $default  reduce using rule 54 (factor)


State 73

   52 unary_expression: NOT unary_expression .

    $default  reduce using rule 52 (unary_expression)


State 74

   51 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 51 (unary_expression)


State 75

   56 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 94


State 76

   24 declaration_list: id .
   25                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    $default  reduce using rule 24 (declaration_list)


State 77

   15 compound_statement: LCURL dummy_token_begin statements RCURL .

    $default  reduce using rule 15 (compound_statement)


State 78

   27 statements: statements statement .

    $default  reduce using rule 27 (statements)


State 79

   42 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    logic_expression   go to state 95
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 80

   59 factor: variable INCOP .

    $default  reduce using rule 59 (factor)


State 81

   60 factor: variable DECOP .

    $default  reduce using rule 60 (factor)


State 82

   38 expression_statement: expression SEMICOLON .

    $default  reduce using rule 38 (expression_statement)


State 83

   44 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    rel_expression     go to state 96
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 84

   46 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    simple_expression  go to state 97
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 85

   48 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    term              go to state 98
    unary_expression  go to state 63
    factor            go to state 64
    id                go to state 65


State 86

   50 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    unary_expression  go to state 99
    factor            go to state 64
    id                go to state 65


State 87

   55 factor: id LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    $default  reduce using rule 62 (argument_list)

    variable           go to state 72
    logic_expression   go to state 100
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    argument_list      go to state 101
    arguments          go to state 102
    id                 go to state 65


State 88

   40 variable: id LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 103
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 89

   32 statement: IF LPAREN expression . RPAREN statement
   33          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 104


State 90

   31 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 50

    expression_statement  go to state 105
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 91

   34 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 106


State 92

   36 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 36 (statement)


State 93

   35 statement: PRINTLN LPAREN id . RPAREN SEMICOLON

    RPAREN  shift, and go to state 107


State 94

   56 factor: LPAREN expression RPAREN .

    $default  reduce using rule 56 (factor)


State 95

   42 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 42 (expression)


State 96

   44 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 44 (logic_expression)


State 97

   46 rel_expression: simple_expression RELOP simple_expression .
   48 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 85

    $default  reduce using rule 46 (rel_expression)


State 98

   48 simple_expression: simple_expression ADDOP term .
   50 term: term . MULOP unary_expression

    MULOP  shift, and go to state 86

    $default  reduce using rule 48 (simple_expression)


State 99

   50 term: term MULOP unary_expression .

    $default  reduce using rule 50 (term)


State 100

   64 arguments: logic_expression .

    $default  reduce using rule 64 (arguments)


State 101

   55 factor: id LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 108


State 102

   61 argument_list: arguments .
   63 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 109

    $default  reduce using rule 61 (argument_list)


State 103

   40 variable: id LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 110


State 104

   32 statement: IF LPAREN expression RPAREN . statement
   33          | IF LPAREN expression RPAREN . statement ELSE statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 111
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 105

   31 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 112
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 106

   34 statement: WHILE LPAREN expression RPAREN . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 113
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 107

   35 statement: PRINTLN LPAREN id RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 108

   55 factor: id LPAREN argument_list RPAREN .

    $default  reduce using rule 55 (factor)


State 109

   63 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    logic_expression   go to state 115
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 110

   40 variable: id LTHIRD expression RTHIRD .

    $default  reduce using rule 40 (variable)


State 111

   32 statement: IF LPAREN expression RPAREN statement .
   33          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 116

    $default  reduce using rule 32 (statement)


State 112

   31 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 117


State 113

   34 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (statement)


State 114

   35 statement: PRINTLN LPAREN id RPAREN SEMICOLON .

    $default  reduce using rule 35 (statement)


State 115

   63 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 63 (arguments)


State 116

   33 statement: IF LPAREN expression RPAREN statement ELSE . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 118
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 117

   31 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 119
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 118

   33 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 33 (statement)


State 119

   31 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 31 (statement)
