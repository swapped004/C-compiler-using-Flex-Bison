Terminals unused in grammar

    CONST_CHAR
    CHAR
    DOUBLE
    CONTINUE
    DO


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier id LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier id LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id LPAREN RPAREN compound_statement

   11 parameter_list: parameter_list COMMA type_specifier id
   12               | parameter_list COMMA type_specifier
   13               | type_specifier id
   14               | type_specifier

   15 compound_statement: LCURL dummy_token_begin statements RCURL dummy_token_end
   16                   | LCURL dummy_token_begin RCURL dummy_token_end

   17 dummy_token_begin: %empty

   18 dummy_token_end: %empty

   19 var_declaration: type_specifier declaration_list SEMICOLON

   20 type_specifier: INT
   21               | FLOAT
   22               | VOID

   23 declaration_list: declaration_list COMMA id
   24                 | declaration_list COMMA id LTHIRD CONST_INT RTHIRD
   25                 | id
   26                 | id LTHIRD CONST_INT RTHIRD

   27 statements: statement
   28           | statements statement

   29 statement: var_declaration
   30          | expression_statement
   31          | compound_statement
   32          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement
   34          | IF LPAREN expression RPAREN statement ELSE statement
   35          | WHILE LPAREN expression RPAREN statement
   36          | PRINTLN LPAREN id RPAREN SEMICOLON
   37          | RETURN expression SEMICOLON

   38 expression_statement: SEMICOLON
   39                     | expression SEMICOLON

   40 variable: id
   41         | id LTHIRD expression RTHIRD

   42 expression: logic_expression
   43           | variable ASSIGNOP logic_expression

   44 logic_expression: rel_expression
   45                 | rel_expression LOGICOP rel_expression

   46 rel_expression: simple_expression
   47               | simple_expression RELOP simple_expression

   48 simple_expression: term
   49                  | simple_expression ADDOP term

   50 term: unary_expression
   51     | term MULOP unary_expression

   52 unary_expression: ADDOP unary_expression
   53                 | NOT unary_expression
   54                 | factor

   55 factor: variable
   56       | id LPAREN argument_list RPAREN
   57       | LPAREN expression RPAREN
   58       | CONST_INT
   59       | CONST_FLOAT
   60       | variable INCOP
   61       | variable DECOP

   62 argument_list: arguments
   63              | %empty

   64 arguments: arguments COMMA logic_expression
   65          | logic_expression

   66 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CONST_INT <si> (258) 24 26 58
    CONST_FLOAT <si> (259) 59
    CONST_CHAR <si> (260)
    ID <si> (261) 66
    INT <si> (262) 20
    FLOAT <si> (263) 21
    VOID <si> (264) 22
    CHAR <si> (265)
    DOUBLE <si> (266)
    IF <si> (267) 33 34
    ELSE <si> (268) 34
    FOR <si> (269) 32
    WHILE <si> (270) 35
    RETURN <si> (271) 37
    PRINTLN <si> (272) 36
    CONTINUE <si> (273)
    DO <si> (274)
    ASSIGNOP <si> (275) 43
    NOT <si> (276) 53
    INCOP <si> (277) 60
    DECOP <si> (278) 61
    LOGICOP <si> (279) 45
    RELOP <si> (280) 47
    ADDOP <si> (281) 49 52
    MULOP <si> (282) 51
    LPAREN <si> (283) 7 8 9 10 32 33 34 35 36 56 57
    RPAREN <si> (284) 7 8 9 10 32 33 34 35 36 56 57
    LCURL <si> (285) 15 16
    RCURL <si> (286) 15 16
    LTHIRD <si> (287) 24 26 41
    RTHIRD <si> (288) 24 26 41
    COMMA <si> (289) 11 12 23 24 64
    SEMICOLON <si> (290) 7 8 19 36 37 38 39
    LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    start <si> (38)
        on left: 1
        on right: 0
    program <si> (39)
        on left: 2 3
        on right: 1 2
    unit <si> (40)
        on left: 4 5 6
        on right: 2 3
    func_declaration <si> (41)
        on left: 7 8
        on right: 5
    func_definition <si> (42)
        on left: 9 10
        on right: 6
    parameter_list <si> (43)
        on left: 11 12 13 14
        on right: 7 9 11 12
    compound_statement <si> (44)
        on left: 15 16
        on right: 9 10 31
    dummy_token_begin <si> (45)
        on left: 17
        on right: 15 16
    dummy_token_end <si> (46)
        on left: 18
        on right: 15 16
    var_declaration <si> (47)
        on left: 19
        on right: 4 29
    type_specifier <si> (48)
        on left: 20 21 22
        on right: 7 8 9 10 11 12 13 14 19
    declaration_list <si> (49)
        on left: 23 24 25 26
        on right: 19 23 24
    statements <si> (50)
        on left: 27 28
        on right: 15 28
    statement <si> (51)
        on left: 29 30 31 32 33 34 35 36 37
        on right: 27 28 32 33 34 35
    expression_statement <si> (52)
        on left: 38 39
        on right: 30 32
    variable <si> (53)
        on left: 40 41
        on right: 43 55 60 61
    expression <si> (54)
        on left: 42 43
        on right: 32 33 34 35 37 39 41 57
    logic_expression <si> (55)
        on left: 44 45
        on right: 42 43 64 65
    rel_expression <si> (56)
        on left: 46 47
        on right: 44 45
    simple_expression <si> (57)
        on left: 48 49
        on right: 46 47 49
    term <si> (58)
        on left: 50 51
        on right: 48 49 51
    unary_expression <si> (59)
        on left: 52 53 54
        on right: 50 51 52 53
    factor <si> (60)
        on left: 55 56 57 58 59 60 61
        on right: 54
    argument_list <si> (61)
        on left: 62 63
        on right: 56
    arguments <si> (62)
        on left: 64 65
        on right: 62 64
    id <si> (63)
        on left: 66
        on right: 7 8 9 10 11 13 23 24 25 26 36 40 41 56


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   20 type_specifier: INT .

    $default  reduce using rule 20 (type_specifier)


State 2

   21 type_specifier: FLOAT .

    $default  reduce using rule 21 (type_specifier)


State 3

   22 type_specifier: VOID .

    $default  reduce using rule 22 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . id LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . id LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . id LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . id LPAREN RPAREN compound_statement
   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14
    id                go to state 15


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

   66 id: ID .

    $default  reduce using rule 66 (id)


State 14

   19 var_declaration: type_specifier declaration_list . SEMICOLON
   23 declaration_list: declaration_list . COMMA id
   24                 | declaration_list . COMMA id LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


State 15

    7 func_declaration: type_specifier id . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier id . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier id . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier id . LPAREN RPAREN compound_statement
   25 declaration_list: id .
   26                 | id . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 18
    LTHIRD  shift, and go to state 19

    $default  reduce using rule 25 (declaration_list)


State 16

   23 declaration_list: declaration_list COMMA . id
   24                 | declaration_list COMMA . id LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 13

    id  go to state 20


State 17

   19 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 19 (var_declaration)


State 18

    7 func_declaration: type_specifier id LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier id LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier id LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier id LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    type_specifier  go to state 23


State 19

   26 declaration_list: id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 24


State 20

   23 declaration_list: declaration_list COMMA id .
   24                 | declaration_list COMMA id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 25

    $default  reduce using rule 23 (declaration_list)


State 21

    8 func_declaration: type_specifier id LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier id LPAREN RPAREN . compound_statement

    LCURL      shift, and go to state 26
    SEMICOLON  shift, and go to state 27

    compound_statement  go to state 28


State 22

    7 func_declaration: type_specifier id LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier id LPAREN parameter_list . RPAREN compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier id
   12               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 29
    COMMA   shift, and go to state 30


State 23

   13 parameter_list: type_specifier . id
   14               | type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 14 (parameter_list)

    id  go to state 31


State 24

   26 declaration_list: id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 32


State 25

   24 declaration_list: declaration_list COMMA id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 33


State 26

   15 compound_statement: LCURL . dummy_token_begin statements RCURL dummy_token_end
   16                   | LCURL . dummy_token_begin RCURL dummy_token_end

    $default  reduce using rule 17 (dummy_token_begin)

    dummy_token_begin  go to state 34


State 27

    8 func_declaration: type_specifier id LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 28

   10 func_definition: type_specifier id LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 29

    7 func_declaration: type_specifier id LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier id LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 26
    SEMICOLON  shift, and go to state 35

    compound_statement  go to state 36


State 30

   11 parameter_list: parameter_list COMMA . type_specifier id
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 37


State 31

   13 parameter_list: type_specifier id .

    $default  reduce using rule 13 (parameter_list)


State 32

   26 declaration_list: id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 33

   24 declaration_list: declaration_list COMMA id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 38


State 34

   15 compound_statement: LCURL dummy_token_begin . statements RCURL dummy_token_end
   16                   | LCURL dummy_token_begin . RCURL dummy_token_end

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    RCURL        shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statements            go to state 54
    statement             go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 35

    7 func_declaration: type_specifier id LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 36

    9 func_definition: type_specifier id LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 37

   11 parameter_list: parameter_list COMMA type_specifier . id
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 12 (parameter_list)

    id  go to state 66


State 38

   24 declaration_list: declaration_list COMMA id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


State 39

   58 factor: CONST_INT .

    $default  reduce using rule 58 (factor)


State 40

   59 factor: CONST_FLOAT .

    $default  reduce using rule 59 (factor)


State 41

   33 statement: IF . LPAREN expression RPAREN statement
   34          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 67


State 42

   32 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 68


State 43

   35 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 69


State 44

   37 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 70
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 45

   36 statement: PRINTLN . LPAREN id RPAREN SEMICOLON

    LPAREN  shift, and go to state 71


State 46

   53 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    unary_expression  go to state 73
    factor            go to state 64
    id                go to state 65


State 47

   52 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    unary_expression  go to state 74
    factor            go to state 64
    id                go to state 65


State 48

   57 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 75
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 49

   16 compound_statement: LCURL dummy_token_begin RCURL . dummy_token_end

    $default  reduce using rule 18 (dummy_token_end)

    dummy_token_end  go to state 76


State 50

   38 expression_statement: SEMICOLON .

    $default  reduce using rule 38 (expression_statement)


State 51

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 52

   29 statement: var_declaration .

    $default  reduce using rule 29 (statement)


State 53

   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14
    id                go to state 77


State 54

   15 compound_statement: LCURL dummy_token_begin statements . RCURL dummy_token_end
   28 statements: statements . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    RCURL        shift, and go to state 78
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 79
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 55

   27 statements: statement .

    $default  reduce using rule 27 (statements)


State 56

   30 statement: expression_statement .

    $default  reduce using rule 30 (statement)


State 57

   43 expression: variable . ASSIGNOP logic_expression
   55 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    ASSIGNOP  shift, and go to state 80
    INCOP     shift, and go to state 81
    DECOP     shift, and go to state 82

    $default  reduce using rule 55 (factor)


State 58

   39 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 59

   42 expression: logic_expression .

    $default  reduce using rule 42 (expression)


State 60

   44 logic_expression: rel_expression .
   45                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 84

    $default  reduce using rule 44 (logic_expression)


State 61

   46 rel_expression: simple_expression .
   47               | simple_expression . RELOP simple_expression
   49 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 85
    ADDOP  shift, and go to state 86

    $default  reduce using rule 46 (rel_expression)


State 62

   48 simple_expression: term .
   51 term: term . MULOP unary_expression

    MULOP  shift, and go to state 87

    $default  reduce using rule 48 (simple_expression)


State 63

   50 term: unary_expression .

    $default  reduce using rule 50 (term)


State 64

   54 unary_expression: factor .

    $default  reduce using rule 54 (unary_expression)


State 65

   40 variable: id .
   41         | id . LTHIRD expression RTHIRD
   56 factor: id . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 88
    LTHIRD  shift, and go to state 89

    $default  reduce using rule 40 (variable)


State 66

   11 parameter_list: parameter_list COMMA type_specifier id .

    $default  reduce using rule 11 (parameter_list)


State 67

   33 statement: IF LPAREN . expression RPAREN statement
   34          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 90
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 68

   32 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 50

    expression_statement  go to state 91
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 69

   35 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 92
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 70

   37 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 71

   36 statement: PRINTLN LPAREN . id RPAREN SEMICOLON

    ID  shift, and go to state 13

    id  go to state 94


State 72

   55 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    INCOP  shift, and go to state 81
    DECOP  shift, and go to state 82

    $default  reduce using rule 55 (factor)


State 73

   53 unary_expression: NOT unary_expression .

    $default  reduce using rule 53 (unary_expression)


State 74

   52 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 52 (unary_expression)


State 75

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 95


State 76

   16 compound_statement: LCURL dummy_token_begin RCURL dummy_token_end .

    $default  reduce using rule 16 (compound_statement)


State 77

   25 declaration_list: id .
   26                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    $default  reduce using rule 25 (declaration_list)


State 78

   15 compound_statement: LCURL dummy_token_begin statements RCURL . dummy_token_end

    $default  reduce using rule 18 (dummy_token_end)

    dummy_token_end  go to state 96


State 79

   28 statements: statements statement .

    $default  reduce using rule 28 (statements)


State 80

   43 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    logic_expression   go to state 97
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 81

   60 factor: variable INCOP .

    $default  reduce using rule 60 (factor)


State 82

   61 factor: variable DECOP .

    $default  reduce using rule 61 (factor)


State 83

   39 expression_statement: expression SEMICOLON .

    $default  reduce using rule 39 (expression_statement)


State 84

   45 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    rel_expression     go to state 98
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 85

   47 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    simple_expression  go to state 99
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 86

   49 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    term              go to state 100
    unary_expression  go to state 63
    factor            go to state 64
    id                go to state 65


State 87

   51 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable          go to state 72
    unary_expression  go to state 101
    factor            go to state 64
    id                go to state 65


State 88

   56 factor: id LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    $default  reduce using rule 63 (argument_list)

    variable           go to state 72
    logic_expression   go to state 102
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    argument_list      go to state 103
    arguments          go to state 104
    id                 go to state 65


State 89

   41 variable: id LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 105
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 90

   33 statement: IF LPAREN expression . RPAREN statement
   34          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 106


State 91

   32 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 50

    expression_statement  go to state 107
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 92

   35 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 93

   37 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 37 (statement)


State 94

   36 statement: PRINTLN LPAREN id . RPAREN SEMICOLON

    RPAREN  shift, and go to state 109


State 95

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


State 96

   15 compound_statement: LCURL dummy_token_begin statements RCURL dummy_token_end .

    $default  reduce using rule 15 (compound_statement)


State 97

   43 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 43 (expression)


State 98

   45 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 45 (logic_expression)


State 99

   47 rel_expression: simple_expression RELOP simple_expression .
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86

    $default  reduce using rule 47 (rel_expression)


State 100

   49 simple_expression: simple_expression ADDOP term .
   51 term: term . MULOP unary_expression

    MULOP  shift, and go to state 87

    $default  reduce using rule 49 (simple_expression)


State 101

   51 term: term MULOP unary_expression .

    $default  reduce using rule 51 (term)


State 102

   65 arguments: logic_expression .

    $default  reduce using rule 65 (arguments)


State 103

   56 factor: id LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 110


State 104

   62 argument_list: arguments .
   64 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 111

    $default  reduce using rule 62 (argument_list)


State 105

   41 variable: id LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 112


State 106

   33 statement: IF LPAREN expression RPAREN . statement
   34          | IF LPAREN expression RPAREN . statement ELSE statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 113
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 107

   32 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 57
    expression         go to state 114
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 108

   35 statement: WHILE LPAREN expression RPAREN . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 115
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 109

   36 statement: PRINTLN LPAREN id RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 110

   56 factor: id LPAREN argument_list RPAREN .

    $default  reduce using rule 56 (factor)


State 111

   64 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48

    variable           go to state 72
    logic_expression   go to state 117
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    id                 go to state 65


State 112

   41 variable: id LTHIRD expression RTHIRD .

    $default  reduce using rule 41 (variable)


State 113

   33 statement: IF LPAREN expression RPAREN statement .
   34          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 118

    $default  reduce using rule 33 (statement)


State 114

   32 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 119


State 115

   35 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (statement)


State 116

   36 statement: PRINTLN LPAREN id RPAREN SEMICOLON .

    $default  reduce using rule 36 (statement)


State 117

   64 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 64 (arguments)


State 118

   34 statement: IF LPAREN expression RPAREN statement ELSE . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 120
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 119

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 13
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    NOT          shift, and go to state 46
    ADDOP        shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 121
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64
    id                    go to state 65


State 120

   34 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (statement)


State 121

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 32 (statement)
